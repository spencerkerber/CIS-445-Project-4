MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 12, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:32:15" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 12, 2015
Time:                13:32:15
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0PS4W2T "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0PS4W2T new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 12, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:32:15" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080760";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M1P120413";
MPRINT(EM_DIAGRAM):   put "EM Version:          13.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 12, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:32:15" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
68685      data work.MdlComp;
MPRINT(EM_DIAGRAM):    data work.MdlComp;
68686      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68687      where
68688      (NODEID="Neural" and LABEL ne 'Neural Network')
68689      OR (NODEID="Neural2" and LABEL ne 'Neural Network (2)')
68690      OR (NODEID="Reg" and LABEL ne 'Regression')
68691      OR (NODEID="MBR2" and LABEL ne 'MBR (2)')
68692      OR (NODEID="Reg2" and LABEL ne 'Regression (2)')
68693      OR (NODEID="MBR" and LABEL ne 'MBR')
68694      ;
MPRINT(EM_DIAGRAM):   where (NODEID="Neural" and LABEL ne 'Neural Network') OR (NODEID="Neural2" and LABEL ne 'Neural Network (2)') OR (NODEID="Reg" and LABEL ne 'Regression') OR (NODEID="MBR2" and LABEL ne 'MBR (2)') OR (NODEID="Reg2" and LABEL ne 
'Regression (2)') OR (NODEID="MBR" and LABEL ne 'MBR') ;
68695      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.EM_NODEID.
      WHERE ((NODEID='Neural') and (LABEL not = 'Neural Network')) or ((NODEID='Neural2') and (LABEL not = 'Neural Network (2)')) or ((NODEID='Reg') and (LABEL not = 'Regression')) or ((NODEID='MBR2') and (LABEL not = 'MBR (2)')) or ((NODEID='Reg2') and 
      (LABEL not = 'Regression (2)')) or ((NODEID='MBR') and (LABEL not = 'MBR'));
NOTE: The data set WORK.MDLCOMP has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\MdlComp\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
68697      proc freq data=EMWS1.MdlComp_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.MdlComp_VariableSet noprint;
68698      table ROLE*LEVEL/out=WORK.MdlCompMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.MdlCompMETA;
68699      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.MDLCOMP_VARIABLESET.
NOTE: The data set WORK.MDLCOMPMETA has 1 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

68700      proc print data=WORK.MdlCompMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.MdlCompMETA label noobs;
68701      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
68702      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
68703      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
68704      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
68705      run;

NOTE: There were 1 observations read from the data set WORK.MDLCOMPMETA.
NOTE: The PROCEDURE PRINT printed page 21.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

68706      title10;
MPRINT(EM_DIAGRAM):   title10;
68707      %let _hpflow = 0;
68708      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68709      set EMWS1.MBR_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR_EMINFO;
68710      where key="HPDMSAMPLE";
MPRINT(EM_DIAGRAM):   where key="HPDMSAMPLE";
68711      call symput('_hpflow', '1');
MPRINT(EM_DIAGRAM):   call symput('_hpflow', '1');
68712      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.MBR_EMINFO.
      WHERE key='HPDMSAMPLE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68713      %let _hpflow = 0;
68714      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68715      set EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO;
68716      where key="HPDMSAMPLE";
MPRINT(EM_DIAGRAM):   where key="HPDMSAMPLE";
68717      call symput('_hpflow', '1');
MPRINT(EM_DIAGRAM):   call symput('_hpflow', '1');
68718      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE key='HPDMSAMPLE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68719      %let _hpflow = 0;
68720      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68721      set EMWS1.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_EMINFO;
68722      where key="HPDMSAMPLE";
MPRINT(EM_DIAGRAM):   where key="HPDMSAMPLE";
68723      call symput('_hpflow', '1');
MPRINT(EM_DIAGRAM):   call symput('_hpflow', '1');
68724      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.REG_EMINFO.
      WHERE key='HPDMSAMPLE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68725      %let _hpflow = 0;
68726      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68727      set EMWS1.MBR2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR2_EMINFO;
68728      where key="HPDMSAMPLE";
MPRINT(EM_DIAGRAM):   where key="HPDMSAMPLE";
68729      call symput('_hpflow', '1');
MPRINT(EM_DIAGRAM):   call symput('_hpflow', '1');
68730      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.MBR2_EMINFO.
      WHERE key='HPDMSAMPLE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68731      %let _hpflow = 0;
68732      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68733      set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
68734      where key="HPDMSAMPLE";
MPRINT(EM_DIAGRAM):   where key="HPDMSAMPLE";
68735      call symput('_hpflow', '1');
MPRINT(EM_DIAGRAM):   call symput('_hpflow', '1');
68736      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE key='HPDMSAMPLE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68737      %let _hpflow = 0;
68738      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68739      set EMWS1.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMINFO;
68740      where key="HPDMSAMPLE";
MPRINT(EM_DIAGRAM):   where key="HPDMSAMPLE";
68741      call symput('_hpflow', '1');
MPRINT(EM_DIAGRAM):   call symput('_hpflow', '1');
68742      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE key='HPDMSAMPLE';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68743      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68744      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68745      where upcase(NODEID) = upcase("MBR");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("MBR");
68746      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68747      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='MBR';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68748      data EMWS1.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):    data EMWS1.MdlComp_EMRANK;
68749      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68750      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))"
68750    ! TARGETLABEL =
68751         "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGETLABEL = "Target Label";
68752      retain parent "MBR" MODEL "MBR" MODELDESCRIPTION "MBR" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "MBR" MODEL "MBR" MODELDESCRIPTION "MBR" TARGETLABEL "SalePrice";
68753      set EMWS1.MBR_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR_EMRANK;
68754      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68755      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.MBR_EMRANK.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set EMWS1.MDLCOMP_EMRANK has 40 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

68756      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68757      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68758      where upcase(NODEID) = upcase("MBR");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("MBR");
68759      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68760      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='MBR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68761      data EMWS1.MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):    data EMWS1.MdlComp_EMSCOREDIST;
68762      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68763      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))"
68763    ! TARGETLABEL =
68764         "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGETLABEL = "Target Label";
68765      retain parent "MBR" MODEL "MBR" MODELDESCRIPTION "MBR" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "MBR" MODEL "MBR" MODELDESCRIPTION "MBR" TARGETLABEL "SalePrice";
68766      set EMWS1.MBR_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR_EMSCOREDIST;
68767      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68768      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 38 observations read from the data set EMWS1.MBR_EMSCOREDIST.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set EMWS1.MDLCOMP_EMSCOREDIST has 38 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68769      data WORK.MBR_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.MBR_OUTFIT;
68770      set EMWS1.MBR_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR_EMOUTFIT;
68771      where TARGET = "SalePrice";
MPRINT(EM_DIAGRAM):   where TARGET = "SalePrice";
68772      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.MBR_EMOUTFIT.
      WHERE TARGET='SalePrice';
NOTE: The data set WORK.MBR_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.MBR_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO43MDHZK1 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.MBR_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECDATA');
NOTE: The data set WORK.EMINFO43MDHZK1 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
68773      data WORK.MBR_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.MBR_OUTFIT;
68774      set WORK.MBR_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.MBR_OUTFIT;
68775      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.MBR_OUTFIT.
NOTE: The data set WORK.MBR_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68776      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68777      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68778      where upcase(NODEID) = upcase("MBR");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("MBR");
68779      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68780      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='MBR';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68781      data EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.MdlComp_EMOUTFIT;
68782      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
68783      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))"
68783    ! TARGETLABEL =
68784         "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGETLABEL = "Target Label";
68785      retain parent "MBR" MODEL "MBR" MODELDESCRIPTION "MBR" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "MBR" MODEL "MBR" MODELDESCRIPTION "MBR" TARGETLABEL "SalePrice";
68786      set WORK.MBR_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.MBR_OUTFIT;
68787      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68788      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.MBR_OUTFIT.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68789      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68790      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68791      where upcase(NODEID) = upcase("MBR");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("MBR");
68792      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68793      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='MBR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68794      data EMWS1.MdlComp_EMRESIDUAL;
MPRINT(EM_DIAGRAM):    data EMWS1.MdlComp_EMRESIDUAL;
68795      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68796      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))"
68796    ! TARGETLABEL =
68797         "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGETLABEL = "Target Label";
68798      retain parent "MBR" MODEL "MBR" MODELDESCRIPTION "MBR" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "MBR" MODEL "MBR" MODELDESCRIPTION "MBR" TARGETLABEL "SalePrice";
68799      set EMWS1.MBR_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR_EMRESIDUAL;
68800      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68801      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set EMWS1.MBR_EMRESIDUAL.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set EMWS1.MDLCOMP_EMRESIDUAL has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68802      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68803      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68804      where upcase(NODEID) = upcase("Neural");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural");
68805      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68806      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68807      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68808      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68809      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68810         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68811      retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "SalePrice";
68812      set EMWS1.Neural_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMRANK;
68813      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68814      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL_EMRANK.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 40 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68815      data EMWS1.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRANK;
68816      set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
68817      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.MDLCOMP_EMRANK.
NOTE: There were 40 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRANK has 80 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68818      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68819      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68820      where upcase(NODEID) = upcase("Neural");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural");
68821      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68822      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68823      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68824      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68825      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68826         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68827      retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "SalePrice";
68828      set EMWS1.Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMSCOREDIST;
68829      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68830      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set EMWS1.NEURAL_EMSCOREDIST.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 35 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

68831      data EMWS1.MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMSCOREDIST;
68832      set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
68833      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 38 observations read from the data set EMWS1.MDLCOMP_EMSCOREDIST.
NOTE: There were 35 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMSCOREDIST has 73 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68834      data WORK.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Neural_OUTFIT;
68835      set EMWS1.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMOUTFIT;
68836      where TARGET = "SalePrice";
MPRINT(EM_DIAGRAM):   where TARGET = "SalePrice";
68837      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMOUTFIT.
      WHERE TARGET='SalePrice';
NOTE: The data set WORK.NEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO41ILCGE3 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECDATA');
NOTE: The data set WORK.EMINFO41ILCGE3 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
68838      data WORK.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Neural_OUTFIT;
68839      set WORK.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Neural_OUTFIT;
68840      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.NEURAL_OUTFIT.
NOTE: The data set WORK.NEURAL_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68841      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68842      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68843      where upcase(NODEID) = upcase("Neural");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural");
68844      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68845      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68846      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68847      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
68848      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68849         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68850      retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "SalePrice";
68851      set WORK.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Neural_OUTFIT;
68852      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68853      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.NEURAL_OUTFIT.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 1 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68854      data EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMOUTFIT;
68855      set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
68856      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: There were 1 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 2 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68857      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68858      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68859      where upcase(NODEID) = upcase("Neural");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural");
68860      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68861      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68862      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68863      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68864      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68865         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68866      retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Neural" MODEL "Neural" MODELDESCRIPTION "Neural Network" TARGETLABEL "SalePrice";
68867      set EMWS1.Neural_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMRESIDUAL;
68868      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68869      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set EMWS1.NEURAL_EMRESIDUAL.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

68870      data EMWS1.MdlComp_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRESIDUAL;
68871      set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
68872      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set EMWS1.MDLCOMP_EMRESIDUAL.
NOTE: There were 16 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRESIDUAL has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68873      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68874      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68875      where upcase(NODEID) = upcase("Reg");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg");
68876      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68877      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='REG';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68878      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68879      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68880      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68881         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68882      retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "SalePrice";
68883      set EMWS1.Reg_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_EMRANK;
68884      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68885      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.REG_EMRANK.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 40 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68886      data EMWS1.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRANK;
68887      set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
68888      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 80 observations read from the data set EMWS1.MDLCOMP_EMRANK.
NOTE: There were 40 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRANK has 120 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68889      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68890      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68891      where upcase(NODEID) = upcase("Reg");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg");
68892      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68893      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='REG';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68894      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68895      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68896      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68897         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68898      retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "SalePrice";
68899      set EMWS1.Reg_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_EMSCOREDIST;
68900      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68901      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set EMWS1.REG_EMSCOREDIST.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 39 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68902      data EMWS1.MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMSCOREDIST;
68903      set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
68904      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 73 observations read from the data set EMWS1.MDLCOMP_EMSCOREDIST.
NOTE: There were 39 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMSCOREDIST has 112 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68905      data WORK.Reg_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Reg_OUTFIT;
68906      set EMWS1.Reg_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_EMOUTFIT;
68907      where TARGET = "SalePrice";
MPRINT(EM_DIAGRAM):   where TARGET = "SalePrice";
68908      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG_EMOUTFIT.
      WHERE TARGET='SalePrice';
NOTE: The data set WORK.REG_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.REG_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO42G_OLRC has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.REG_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECDATA');
NOTE: The data set WORK.EMINFO42G_OLRC has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
68909      data WORK.Reg_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Reg_OUTFIT;
68910      set WORK.Reg_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Reg_OUTFIT;
68911      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.REG_OUTFIT.
NOTE: The data set WORK.REG_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68912      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68913      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68914      where upcase(NODEID) = upcase("Reg");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg");
68915      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68916      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='REG';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68917      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68918      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
68919      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68920         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68921      retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "SalePrice";
68922      set WORK.Reg_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Reg_OUTFIT;
68923      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68924      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.REG_OUTFIT.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

68925      data EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMOUTFIT;
68926      set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
68927      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: There were 1 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 3 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68928      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68929      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68930      where upcase(NODEID) = upcase("Reg");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg");
68931      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68932      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='REG';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68933      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68934      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68935      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68936         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68937      retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Reg" MODEL "Reg" MODELDESCRIPTION "Regression" TARGETLABEL "SalePrice";
68938      set EMWS1.Reg_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_EMRESIDUAL;
68939      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68940      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set EMWS1.REG_EMRESIDUAL.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

68941      data EMWS1.MdlComp_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRESIDUAL;
68942      set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
68943      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 32 observations read from the data set EMWS1.MDLCOMP_EMRESIDUAL.
NOTE: There were 16 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRESIDUAL has 48 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

68944      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68945      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68946      where upcase(NODEID) = upcase("MBR2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("MBR2");
68947      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68948      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='MBR2';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68949      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68950      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68951      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68952         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68953      retain parent "MBR2" MODEL "MBR2" MODELDESCRIPTION "MBR (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "MBR2" MODEL "MBR2" MODELDESCRIPTION "MBR (2)" TARGETLABEL "SalePrice";
68954      set EMWS1.MBR2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR2_EMRANK;
68955      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68956      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.MBR2_EMRANK.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 40 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
      

68957      data EMWS1.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRANK;
68958      set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
68959      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 120 observations read from the data set EMWS1.MDLCOMP_EMRANK.
NOTE: There were 40 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRANK has 160 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68960      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68961      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68962      where upcase(NODEID) = upcase("MBR2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("MBR2");
68963      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68964      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='MBR2';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

68965      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68966      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
68967      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68968         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68969      retain parent "MBR2" MODEL "MBR2" MODELDESCRIPTION "MBR (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "MBR2" MODEL "MBR2" MODELDESCRIPTION "MBR (2)" TARGETLABEL "SalePrice";
68970      set EMWS1.MBR2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR2_EMSCOREDIST;
68971      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68972      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 38 observations read from the data set EMWS1.MBR2_EMSCOREDIST.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 38 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
      

68973      data EMWS1.MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMSCOREDIST;
68974      set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
68975      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 112 observations read from the data set EMWS1.MDLCOMP_EMSCOREDIST.
NOTE: There were 38 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMSCOREDIST has 150 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68976      data WORK.MBR2_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.MBR2_OUTFIT;
68977      set EMWS1.MBR2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR2_EMOUTFIT;
68978      where TARGET = "SalePrice";
MPRINT(EM_DIAGRAM):   where TARGET = "SalePrice";
68979      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.MBR2_EMOUTFIT.
      WHERE TARGET='SalePrice';
NOTE: The data set WORK.MBR2_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.MBR2_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO42G9BZ82 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.MBR2_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECDATA');
NOTE: The data set WORK.EMINFO42G9BZ82 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
68980      data WORK.MBR2_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.MBR2_OUTFIT;
68981      set WORK.MBR2_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.MBR2_OUTFIT;
68982      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.MBR2_OUTFIT.
NOTE: The data set WORK.MBR2_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68983      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
68984      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
68985      where upcase(NODEID) = upcase("MBR2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("MBR2");
68986      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
68987      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='MBR2';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68988      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
68989      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
68990      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
68991         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
68992      retain parent "MBR2" MODEL "MBR2" MODELDESCRIPTION "MBR (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "MBR2" MODEL "MBR2" MODELDESCRIPTION "MBR (2)" TARGETLABEL "SalePrice";
68993      set WORK.MBR2_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.MBR2_OUTFIT;
68994      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
68995      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.MBR2_OUTFIT.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

68996      data EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMOUTFIT;
68997      set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
68998      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: There were 1 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 4 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

68999      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69000      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
69001      where upcase(NODEID) = upcase("MBR2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("MBR2");
69002      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
69003      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='MBR2';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69004      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
69005      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
69006      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
69007         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
69008      retain parent "MBR2" MODEL "MBR2" MODELDESCRIPTION "MBR (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "MBR2" MODEL "MBR2" MODELDESCRIPTION "MBR (2)" TARGETLABEL "SalePrice";
69009      set EMWS1.MBR2_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR2_EMRESIDUAL;
69010      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
69011      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS1.MBR2_EMRESIDUAL.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

69012      data EMWS1.MdlComp_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRESIDUAL;
69013      set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
69014      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS1.MDLCOMP_EMRESIDUAL.
NOTE: There were 17 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRESIDUAL has 65 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69015      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69016      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
69017      where upcase(NODEID) = upcase("Neural2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural2");
69018      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
69019      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL2';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69020      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
69021      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
69022      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
69023         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
69024      retain parent "Neural2" MODEL "Neural2" MODELDESCRIPTION "Neural Network (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Neural2" MODEL "Neural2" MODELDESCRIPTION "Neural Network (2)" TARGETLABEL "SalePrice";
69025      set EMWS1.Neural2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMRANK;
69026      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
69027      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL2_EMRANK.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 40 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

69028      data EMWS1.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRANK;
69029      set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
69030      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 160 observations read from the data set EMWS1.MDLCOMP_EMRANK.
NOTE: There were 40 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRANK has 200 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69031      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69032      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
69033      where upcase(NODEID) = upcase("Neural2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural2");
69034      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
69035      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL2';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69036      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
69037      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
69038      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
69039         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
69040      retain parent "Neural2" MODEL "Neural2" MODELDESCRIPTION "Neural Network (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Neural2" MODEL "Neural2" MODELDESCRIPTION "Neural Network (2)" TARGETLABEL "SalePrice";
69041      set EMWS1.Neural2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMSCOREDIST;
69042      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
69043      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 39 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

69044      data EMWS1.MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMSCOREDIST;
69045      set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
69046      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 150 observations read from the data set EMWS1.MDLCOMP_EMSCOREDIST.
NOTE: There were 39 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMSCOREDIST has 189 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69047      data WORK.Neural2_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Neural2_OUTFIT;
69048      set EMWS1.Neural2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMOUTFIT;
69049      where TARGET = "SalePrice";
MPRINT(EM_DIAGRAM):   where TARGET = "SalePrice";
69050      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMOUTFIT.
      WHERE TARGET='SalePrice';
NOTE: The data set WORK.NEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO434D8X4D has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECDATA');
NOTE: The data set WORK.EMINFO434D8X4D has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
69051      data WORK.Neural2_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Neural2_OUTFIT;
69052      set WORK.Neural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Neural2_OUTFIT;
69053      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.NEURAL2_OUTFIT.
NOTE: The data set WORK.NEURAL2_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69054      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69055      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
69056      where upcase(NODEID) = upcase("Neural2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural2");
69057      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
69058      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL2';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69059      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
69060      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
69061      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
69062         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
69063      retain parent "Neural2" MODEL "Neural2" MODELDESCRIPTION "Neural Network (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Neural2" MODEL "Neural2" MODELDESCRIPTION "Neural Network (2)" TARGETLABEL "SalePrice";
69064      set WORK.Neural2_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Neural2_OUTFIT;
69065      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
69066      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.NEURAL2_OUTFIT.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 1 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69067      data EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMOUTFIT;
69068      set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
69069      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: There were 1 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 5 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

69070      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69071      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
69072      where upcase(NODEID) = upcase("Neural2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Neural2");
69073      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
69074      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='NEURAL2';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69075      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
69076      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
69077      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
69078         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
69079      retain parent "Neural2" MODEL "Neural2" MODELDESCRIPTION "Neural Network (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Neural2" MODEL "Neural2" MODELDESCRIPTION "Neural Network (2)" TARGETLABEL "SalePrice";
69080      set EMWS1.Neural2_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMRESIDUAL;
69081      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
69082      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set EMWS1.NEURAL2_EMRESIDUAL.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

69083      data EMWS1.MdlComp_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRESIDUAL;
69084      set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
69085      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set EMWS1.MDLCOMP_EMRESIDUAL.
NOTE: There were 17 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRESIDUAL has 82 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69086      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69087      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
69088      where upcase(NODEID) = upcase("Reg2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg2");
69089      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
69090      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='REG2';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69091      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
69092      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
69093      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
69094         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
69095      retain parent "Reg2" MODEL "Reg2" MODELDESCRIPTION "Regression (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Reg2" MODEL "Reg2" MODELDESCRIPTION "Regression (2)" TARGETLABEL "SalePrice";
69096      set EMWS1.Reg2_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMRANK;
69097      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
69098      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set EMWS1.REG2_EMRANK.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 40 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

69099      data EMWS1.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRANK;
69100      set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK work.MdlComp_TEMP;
69101      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 200 observations read from the data set EMWS1.MDLCOMP_EMRANK.
NOTE: There were 40 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRANK has 240 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69102      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69103      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
69104      where upcase(NODEID) = upcase("Reg2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg2");
69105      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
69106      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='REG2';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69107      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
69108      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
69109      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
69110         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
69111      retain parent "Reg2" MODEL "Reg2" MODELDESCRIPTION "Regression (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Reg2" MODEL "Reg2" MODELDESCRIPTION "Regression (2)" TARGETLABEL "SalePrice";
69112      set EMWS1.Reg2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMSCOREDIST;
69113      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
69114      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 31 observations read from the data set EMWS1.REG2_EMSCOREDIST.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 31 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.07 seconds
      

69115      data EMWS1.MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMSCOREDIST;
69116      set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMSCOREDIST work.MdlComp_TEMP;
69117      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 189 observations read from the data set EMWS1.MDLCOMP_EMSCOREDIST.
NOTE: There were 31 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMSCOREDIST has 220 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69118      data WORK.Reg2_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Reg2_OUTFIT;
69119      set EMWS1.Reg2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMOUTFIT;
69120      where TARGET = "SalePrice";
MPRINT(EM_DIAGRAM):   where TARGET = "SalePrice";
69121      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.REG2_EMOUTFIT.
      WHERE TARGET='SalePrice';
NOTE: The data set WORK.REG2_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO423_LAVB has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
NOTE: There were 1 observations read from the data set EMWS1.REG2_EMINFO.
      WHERE (TARGET='SalePrice') and (KEY='DECDATA');
NOTE: The data set WORK.EMINFO423_LAVB has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
69122      data WORK.Reg2_OUTFIT;
MPRINT(EM_DIAGRAM):    data WORK.Reg2_OUTFIT;
69123      set WORK.Reg2_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Reg2_OUTFIT;
69124      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.REG2_OUTFIT.
NOTE: The data set WORK.REG2_OUTFIT has 1 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69125      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69126      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
69127      where upcase(NODEID) = upcase("Reg2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg2");
69128      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
69129      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='REG2';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69130      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
69131      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200;
69132      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
69133         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
69134      retain parent "Reg2" MODEL "Reg2" MODELDESCRIPTION "Regression (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Reg2" MODEL "Reg2" MODELDESCRIPTION "Regression (2)" TARGETLABEL "SalePrice";
69135      set WORK.Reg2_OUTFIT;
MPRINT(EM_DIAGRAM):   set WORK.Reg2_OUTFIT;
69136      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
69137      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.REG2_OUTFIT.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69138      data EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMOUTFIT;
69139      set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMOUTFIT work.MdlComp_TEMP;
69140      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: There were 1 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 6 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69141      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69142      set EMWS1.em_nodeid;
MPRINT(EM_DIAGRAM):   set EMWS1.em_nodeid;
69143      where upcase(NODEID) = upcase("Reg2");
MPRINT(EM_DIAGRAM):   where upcase(NODEID) = upcase("Reg2");
69144      call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('_MODELDESC', strip(tranwrd(LABEL, '"', '""')));
69145      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(NODEID)='REG2';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69146      data work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):    data work.MdlComp_TEMP;
69147      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 DATAROLE $20 TARGET $32 TARGETLABEL $200;
69148      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" MODELDESCRIPTION = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeldesc_vlabel, NOQUOTE))" TARGET =
69149         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" MODELDESCRIPTION = "Model Description" TARGET = "Target Variable" TARGETLABEL = "Target Label";
69150      retain parent "Reg2" MODEL "Reg2" MODELDESCRIPTION "Regression (2)" TARGETLABEL "SalePrice";
MPRINT(EM_DIAGRAM):   retain parent "Reg2" MODEL "Reg2" MODELDESCRIPTION "Regression (2)" TARGETLABEL "SalePrice";
69151      set EMWS1.Reg2_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_EMRESIDUAL;
69152      where upcase(TARGET) = upcase("SalePrice");
MPRINT(EM_DIAGRAM):   where upcase(TARGET) = upcase("SalePrice");
69153      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 18 observations read from the data set EMWS1.REG2_EMRESIDUAL.
      WHERE UPCASE(TARGET)='SALEPRICE';
NOTE: The data set WORK.MDLCOMP_TEMP has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

69154      data EMWS1.MdlComp_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMRESIDUAL;
69155      set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRESIDUAL work.MdlComp_TEMP;
69156      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 82 observations read from the data set EMWS1.MDLCOMP_EMRESIDUAL.
NOTE: There were 18 observations read from the data set WORK.MDLCOMP_TEMP.
NOTE: The data set EMWS1.MDLCOMP_EMRESIDUAL has 100 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

*------------------------------------------------------------* 
* "Compute assessment statistics" 
*------------------------------------------------------------* 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="MBR" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.MBR_TRAIN;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="MBR" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="MBR" and DATAROLE="VALIDATE";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSVALID', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.MBR_VALIDATE;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Neural" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.Neural_TRAIN;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Neural" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Neural" and DATAROLE="VALIDATE";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSVALID', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.Neural_VALIDATE;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Reg" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.Reg_TRAIN;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Reg" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Reg" and DATAROLE="VALIDATE";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSVALID', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.Reg_VALIDATE;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="MBR2" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR2_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.MBR2_TRAIN;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="MBR2" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="MBR2" and DATAROLE="VALIDATE";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSVALID', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MBR2_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.MBR2_VALIDATE;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Neural2" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.Neural2_TRAIN;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Neural2" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Neural2" and DATAROLE="VALIDATE";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSVALID', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.Neural2_VALIDATE;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL SETMETADATA >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Reg2" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.Reg2_TRAIN;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Reg2" and DATAROLE="TRAIN";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSTRAIN', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK end=eof;
MPRINT(EM_DIAGRAM):   where MODEL="Reg2" and DATAROLE="VALIDATE";
MPRINT(EM_DIAGRAM):   if eof then call symput('ASSESSVALID', '0');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_SalePrice_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', event);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EMWS1.Reg2_VALIDATE;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("SalePrice") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;


MPRINT(EM_ASSESS):   VAR P_SalePrice _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;

MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;

MPRINT(EM_ASSESS):   SET VAROUT END = EOF;

MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_SalePrice") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_SalePrice") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_SalePrice SalePrice _tmpfreqvar_ WHERE = (SalePrice > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_SalePrice ;
MPRINT(EM_ASSESS):   VAR SalePrice ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
69433      proc sort data=EMWS1.MdlComp_EMOUTFIT NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.MdlComp_EMOUTFIT NOTHREADS;
69434      by model target;
MPRINT(EM_DIAGRAM):   by model target;
69435      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 6 observations and 39 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69436      data EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.MdlComp_EMOUTFIT;
69437      length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200 _CRITERION_ 8;
MPRINT(EM_DIAGRAM):   length PARENT $16 MODEL $16 MODELDESCRIPTION $81 TARGET $32 TARGETLABEL $200 _CRITERION_ 8;
69438      set EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMOUTFIT;
69439      label _CRITERION_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_selectioncriterion_vlabel ,  NOQUOTE, %nrbquote(Valid: Average Squared Error)))";
MPRINT(EM_DIAGRAM):   label _CRITERION_ = "Selection Criterion: Valid: Average Squared Error";
69440      _CRITERION_ = _VASE_;
MPRINT(EM_DIAGRAM):   _CRITERION_ = _VASE_;
69441      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 6 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69442      data EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.MdlComp_EMOUTFIT;
69443      length USE $1;
MPRINT(EM_DIAGRAM):   length USE $1;
69444      label USE= "%sysfunc(sasmsg(sashelp.dmine, rpt_selmodel_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label USE= "Selected Model";
69445      set EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMOUTFIT;
69446      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable USE is uninitialized.
NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 6 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69447      proc sort data = EMWS1.MdlComp_EMOUTFIT NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.MdlComp_EMOUTFIT NOTHREADS;
69448      by
69449      _VASE_
69450      _VMISC_ _ASE_ _MISC_;
MPRINT(EM_DIAGRAM):   by _VASE_ _VMISC_ _ASE_ _MISC_;
69451      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 6 observations and 41 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69452      %let EM_AUTOMODEL = %str();
69453      data EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_EMOUTFIT;
69454      set EMWS1.MdlComp_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMOUTFIT;
69455      drop found;
MPRINT(EM_DIAGRAM):   drop found;
69456      retain found 0;
MPRINT(EM_DIAGRAM):   retain found 0;
69457      if found = 0 and _VASE_ ne . then do;
MPRINT(EM_DIAGRAM):   if found = 0 and _VASE_ ne . then do;
69458      use = 'Y';
MPRINT(EM_DIAGRAM):   use = 'Y';
69459      found = 1;
MPRINT(EM_DIAGRAM):   found = 1;
69460      call symput('EM_AUTOMODEL', model);
MPRINT(EM_DIAGRAM):   call symput('EM_AUTOMODEL', model);
69461      end;
MPRINT(EM_DIAGRAM):   end;
69462      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS1.MDLCOMP_EMOUTFIT has 6 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69463      title ' ';
MPRINT(EM_DIAGRAM):    title ' ';
69464      proc print data=EMWS1.MdlComp_EMOUTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.MdlComp_EMOUTFIT noobs label;
69465      var
69466      USE
69467      MODEL
69468      MODELDESCRIPTION
69469      _VASE_
69470      _ASE_
69471      _MISC_
69472      ;
MPRINT(EM_DIAGRAM):   var USE MODEL MODELDESCRIPTION _VASE_ _ASE_ _MISC_ ;
69473      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title,        NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Fit Statistics";
69474      title10 "Model Selection based on Valid: Average Squared Error (_VASE_)";
MPRINT(EM_DIAGRAM):   title10 "Model Selection based on Valid: Average Squared Error (_VASE_)";
MPRINT(EM_DIAGRAM):   run;
69475      run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: The PROCEDURE PRINT printed page 22.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69476      title9;
MPRINT(EM_DIAGRAM):   title9;
69477      title10;
MPRINT(EM_DIAGRAM):   title10;
69478      proc transpose data=EMWS1.MdlComp_EMOUTFIT out= work.modelstats(rename=(_LABEL_=Label _NAME_=STAT));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.MdlComp_EMOUTFIT out= work.modelstats(rename=(_LABEL_=Label _NAME_=STAT));
69479      ID model;
MPRINT(EM_DIAGRAM):   ID model;
69480      by target targetLabel;
MPRINT(EM_DIAGRAM):   by target targetLabel;
69481      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: The data set WORK.MODELSTATS has 35 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69482      data work.modelstats;
MPRINT(EM_DIAGRAM):   data work.modelstats;
69483      set work.modelstats;
MPRINT(EM_DIAGRAM):   set work.modelstats;
69484      if substr(STAT, 1, 2) = '_V' or STAT='VKS' then do;
MPRINT(EM_DIAGRAM):   if substr(STAT, 1, 2) = '_V' or STAT='VKS' then do;
69485      NumRole=2;
MPRINT(EM_DIAGRAM):   NumRole=2;
69486      end;
MPRINT(EM_DIAGRAM):   end;
69487      else if substr(STAT, 1, 2) = '_T' or STAT='TKS' then do;
MPRINT(EM_DIAGRAM):   else if substr(STAT, 1, 2) = '_T' or STAT='TKS' then do;
69488      NumRole=3;
MPRINT(EM_DIAGRAM):   NumRole=3;
69489      end;
MPRINT(EM_DIAGRAM):   end;
69490      else if substr(STAT, 1, 1) = '_' or STAT in('KS', 'BINNED_KS_PROB_CUTOFF') then do;
MPRINT(EM_DIAGRAM):   else if substr(STAT, 1, 1) = '_' or STAT in('KS', 'BINNED_KS_PROB_CUTOFF') then do;
69491      NumRole=1;
MPRINT(EM_DIAGRAM):   NumRole=1;
69492      end;
MPRINT(EM_DIAGRAM):   end;
69493      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set WORK.MODELSTATS.
NOTE: The data set WORK.MODELSTATS has 35 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69494      proc sort data=work.modelstats out=work.modelstats;
MPRINT(EM_DIAGRAM):   proc sort data=work.modelstats out=work.modelstats;
69495      by NumRole STAT;
MPRINT(EM_DIAGRAM):   by NumRole STAT;
69496      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set WORK.MODELSTATS.
NOTE: The data set WORK.MODELSTATS has 35 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69497      proc format;
MPRINT(EM_DIAGRAM):   proc format;
69498      value RoleFmt 1='Train' 2='Valid' 3='Test';
MPRINT(EM_DIAGRAM):   value RoleFmt 1='Train' 2='Valid' 3='Test';
NOTE: Format ROLEFMT has been output.
MPRINT(EM_DIAGRAM):   run;
69499      run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69500      proc print data= work.modelstats(drop=STAT target targetLabel) noobs label;
MPRINT(EM_DIAGRAM):   proc print data= work.modelstats(drop=STAT target targetLabel) noobs label;
69501      label Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel, NOQUOTE))" NumRole= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Statistics" NumRole= "Data Role";
69502      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_fittable_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Fit Statistics Table";
69503      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_target_title,   NOQUOTE, SalePrice))";
MPRINT(EM_DIAGRAM):   title10 "Target: SalePrice";
MPRINT(EM_DIAGRAM):   by NumRole;
MPRINT(EM_DIAGRAM):   format NumRole RoleFmt.;
MPRINT(EM_DIAGRAM):   run;
69504      by NumRole;
69505      format NumRole RoleFmt.;
69506      run;

NOTE: There were 35 observations read from the data set WORK.MODELSTATS.
NOTE: The PROCEDURE PRINT printed page 23.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69507      title9;
MPRINT(EM_DIAGRAM):   title9;
69508      title10;
MPRINT(EM_DIAGRAM):   title10;
69509      data EMWS1.MdlComp_COMPAREFIT;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_COMPAREFIT;
69510      length DataRole Target $32 targetlabel $200;
MPRINT(EM_DIAGRAM):   length DataRole Target $32 targetlabel $200;
69511      label DataRole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" STAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_vlabel,   NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_statlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DataRole = "Data Role" STAT = "Fit Statistics" LABEL = "Statistics Label";
69512      set work.modelstats;
MPRINT(EM_DIAGRAM):   set work.modelstats;
69513      DataRole = strip(put(NumRole, Rolefmt.));
MPRINT(EM_DIAGRAM):   DataRole = strip(put(NumRole, Rolefmt.));
69514      drop NumRole;
MPRINT(EM_DIAGRAM):   drop NumRole;
69515      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 35 observations read from the data set WORK.MODELSTATS.
NOTE: The data set EMWS1.MDLCOMP_COMPAREFIT has 35 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69516      %macro ReportFit;
69517      proc transpose data= EMWS1.MdlComp_EMOUTFIT(obs=1) out=tempFit;
69518      run;
69519      data _null_;
69520      set tempfit end=eof;
69521      retain statCount 0;
69522      if substr(_NAME_,1,2) ^in('_V', '_T', 'TK', 'VK') then do;
69523      statCount + 1;
69524      call symput('statName'!!strip(put(statCount,best.)), _NAME_);
69525      call symput('statLabel'!!strip(put(statCount,best.)), scan(_LABEL_,2, ':'));
69526      end;
69527      if eof then do;
69528      call symput('statCount', strip(put(statCount,best.)));
69529      end;
69530      run;
69531      data EMWS1.MdlComp_EMREPORTFIT;
69532      set EMWS1.MdlComp_EMOUTFIT;
69533      length FitStat $41 Label $40;
69534      label FitStat = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_vlabel,   NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_statlabel_vlabel, NOQUOTE))";
69535      %do i=1 %to &statCount;
69536      FitStat="&&StatName&i";
69537      Label="&&StatLabel&i";
69538      Train =&&StatName&i;
69539      %if &&StatName&i= KS %then %do;
69540      Validate = VKS;
69541      Test = TKS;
69542      %end;
69543      %else %if &&StatName&i= BINNED_KS_PROB_CUTOFF %then %do;
69544      Validate = _VBINNED_KS_PROB_CUTOFF_;
69545      Test = _TBINNED_KS_PROB_CUTOFF_;
69546      %end;
69547      %else %do;
69548      %let VstatName= _V%substr(&&StatName&i,2);
69549      %let TstatName= _T%substr(&&StatName&i,2);
69550      Validate=&VStatName;
69551      Test=&TStatName;
69552      %end;
69553      output;
69554      %end;
69555      keep Parent Model Target TargetLabel FitStat Label Train Validate Test;
69556      run;
69557      %mend;
69558      %reportFit;
MPRINT(EM_DIAGRAM):   
MPRINT(REPORTFIT):   proc transpose data= EMWS1.MdlComp_EMOUTFIT(obs=1) out=tempFit;
MPRINT(REPORTFIT):   run;

NOTE: There were 1 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: The data set WORK.TEMPFIT has 35 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(REPORTFIT):   data _null_;
MPRINT(REPORTFIT):   set tempfit end=eof;
MPRINT(REPORTFIT):   retain statCount 0;
MPRINT(REPORTFIT):   if substr(_NAME_,1,2) ^in('_V', '_T', 'TK', 'VK') then do;
MPRINT(REPORTFIT):   statCount + 1;
MPRINT(REPORTFIT):   call symput('statName'!!strip(put(statCount,best.)), _NAME_);
MPRINT(REPORTFIT):   call symput('statLabel'!!strip(put(statCount,best.)), scan(_LABEL_,2, ':'));
MPRINT(REPORTFIT):   end;
MPRINT(REPORTFIT):   if eof then do;
MPRINT(REPORTFIT):   call symput('statCount', strip(put(statCount,best.)));
MPRINT(REPORTFIT):   end;
MPRINT(REPORTFIT):   run;

NOTE: There were 35 observations read from the data set WORK.TEMPFIT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(REPORTFIT):   data EMWS1.MdlComp_EMREPORTFIT;
MPRINT(REPORTFIT):   set EMWS1.MdlComp_EMOUTFIT;
MPRINT(REPORTFIT):   length FitStat $41 Label $40;
MPRINT(REPORTFIT):   label FitStat = "Fit Statistics" LABEL = "Statistics Label";
MPRINT(REPORTFIT):   FitStat="_CRITERION_";
MPRINT(REPORTFIT):   Label=" Valid";
MPRINT(REPORTFIT):   Train =_CRITERION_;
MPRINT(REPORTFIT):   Validate=_VCRITERION_;
MPRINT(REPORTFIT):   Test=_TCRITERION_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_NW_       ";
MPRINT(REPORTFIT):   Label=" Number of Estimated Weights               ";
MPRINT(REPORTFIT):   Train =_NW_ ;
MPRINT(REPORTFIT):   Validate=_VNW_;
MPRINT(REPORTFIT):   Test=_TNW_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_NOBS_     ";
MPRINT(REPORTFIT):   Label=" Sum of Frequencies                        ";
MPRINT(REPORTFIT):   Train =_NOBS_ ;
MPRINT(REPORTFIT):   Validate=_VNOBS_;
MPRINT(REPORTFIT):   Test=_TNOBS_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_SUMW_     ";
MPRINT(REPORTFIT):   Label=" Sum of Case Weights Times Freq            ";
MPRINT(REPORTFIT):   Train =_SUMW_ ;
MPRINT(REPORTFIT):   Validate=_VSUMW_;
MPRINT(REPORTFIT):   Test=_TSUMW_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_DFT_      ";
MPRINT(REPORTFIT):   Label=" Total Degrees of Freedom                  ";
MPRINT(REPORTFIT):   Train =_DFT_ ;
MPRINT(REPORTFIT):   Validate=_VDFT_;
MPRINT(REPORTFIT):   Test=_TDFT_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_DFM_      ";
MPRINT(REPORTFIT):   Label=" Model Degrees of Freedom                  ";
MPRINT(REPORTFIT):   Train =_DFM_ ;
MPRINT(REPORTFIT):   Validate=_VDFM_;
MPRINT(REPORTFIT):   Test=_TDFM_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_DFE_      ";
MPRINT(REPORTFIT):   Label=" Degrees of Freedom for Error              ";
MPRINT(REPORTFIT):   Train =_DFE_ ;
MPRINT(REPORTFIT):   Validate=_VDFE_;
MPRINT(REPORTFIT):   Test=_TDFE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_ASE_      ";
MPRINT(REPORTFIT):   Label=" Average Squared Error                     ";
MPRINT(REPORTFIT):   Train =_ASE_ ;
MPRINT(REPORTFIT):   Validate=_VASE_;
MPRINT(REPORTFIT):   Test=_TASE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_RASE_     ";
MPRINT(REPORTFIT):   Label=" Root Average Squared Error                ";
MPRINT(REPORTFIT):   Train =_RASE_ ;
MPRINT(REPORTFIT):   Validate=_VRASE_;
MPRINT(REPORTFIT):   Test=_TRASE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_DIV_      ";
MPRINT(REPORTFIT):   Label=" Divisor for ASE                           ";
MPRINT(REPORTFIT):   Train =_DIV_ ;
MPRINT(REPORTFIT):   Validate=_VDIV_;
MPRINT(REPORTFIT):   Test=_TDIV_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_SSE_      ";
MPRINT(REPORTFIT):   Label=" Sum of Squared Errors                     ";
MPRINT(REPORTFIT):   Train =_SSE_ ;
MPRINT(REPORTFIT):   Validate=_VSSE_;
MPRINT(REPORTFIT):   Test=_TSSE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_MSE_      ";
MPRINT(REPORTFIT):   Label=" Mean Squared Error                        ";
MPRINT(REPORTFIT):   Train =_MSE_ ;
MPRINT(REPORTFIT):   Validate=_VMSE_;
MPRINT(REPORTFIT):   Test=_TMSE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_RMSE_     ";
MPRINT(REPORTFIT):   Label=" Root Mean Squared Error                   ";
MPRINT(REPORTFIT):   Train =_RMSE_ ;
MPRINT(REPORTFIT):   Validate=_VRMSE_;
MPRINT(REPORTFIT):   Test=_TRMSE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_AVERR_    ";
MPRINT(REPORTFIT):   Label=" Average Error Function                    ";
MPRINT(REPORTFIT):   Train =_AVERR_ ;
MPRINT(REPORTFIT):   Validate=_VAVERR_;
MPRINT(REPORTFIT):   Test=_TAVERR_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_ERR_      ";
MPRINT(REPORTFIT):   Label=" Error Function                            ";
MPRINT(REPORTFIT):   Train =_ERR_ ;
MPRINT(REPORTFIT):   Validate=_VERR_;
MPRINT(REPORTFIT):   Test=_TERR_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_MAX_      ";
MPRINT(REPORTFIT):   Label=" Maximum Absolute Error                    ";
MPRINT(REPORTFIT):   Train =_MAX_ ;
MPRINT(REPORTFIT):   Validate=_VMAX_;
MPRINT(REPORTFIT):   Test=_TMAX_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_FPE_      ";
MPRINT(REPORTFIT):   Label=" Final Prediction Error                    ";
MPRINT(REPORTFIT):   Train =_FPE_ ;
MPRINT(REPORTFIT):   Validate=_VFPE_;
MPRINT(REPORTFIT):   Test=_TFPE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_RFPE_     ";
MPRINT(REPORTFIT):   Label=" Root Final Prediction Error               ";
MPRINT(REPORTFIT):   Train =_RFPE_ ;
MPRINT(REPORTFIT):   Validate=_VRFPE_;
MPRINT(REPORTFIT):   Test=_TRFPE_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_AIC_      ";
MPRINT(REPORTFIT):   Label=" Akaike's Information Criterion            ";
MPRINT(REPORTFIT):   Train =_AIC_ ;
MPRINT(REPORTFIT):   Validate=_VAIC_;
MPRINT(REPORTFIT):   Test=_TAIC_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_SBC_      ";
MPRINT(REPORTFIT):   Label=" Schwarz's Bayesian Criterion              ";
MPRINT(REPORTFIT):   Train =_SBC_ ;
MPRINT(REPORTFIT):   Validate=_VSBC_;
MPRINT(REPORTFIT):   Test=_TSBC_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_MISC_     ";
MPRINT(REPORTFIT):   Label=" Misclassification Rate                    ";
MPRINT(REPORTFIT):   Train =_MISC_ ;
MPRINT(REPORTFIT):   Validate=_VMISC_;
MPRINT(REPORTFIT):   Test=_TMISC_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   FitStat="_WRONG_    ";
MPRINT(REPORTFIT):   Label=" Number of Wrong Classifications           ";
MPRINT(REPORTFIT):   Train =_WRONG_ ;
MPRINT(REPORTFIT):   Validate=_VWRONG_;
MPRINT(REPORTFIT):   Test=_TWRONG_;
MPRINT(REPORTFIT):   output;
MPRINT(REPORTFIT):   keep Parent Model Target TargetLabel FitStat Label Train Validate Test;
MPRINT(REPORTFIT):   run;

NOTE: Variable _VCRITERION_ is uninitialized.
NOTE: Variable _TCRITERION_ is uninitialized.
NOTE: Variable _VNW_ is uninitialized.
NOTE: Variable _TNW_ is uninitialized.
NOTE: Variable _TNOBS_ is uninitialized.
NOTE: Variable _TSUMW_ is uninitialized.
NOTE: Variable _VDFT_ is uninitialized.
NOTE: Variable _TDFT_ is uninitialized.
NOTE: Variable _VDFM_ is uninitialized.
NOTE: Variable _TDFM_ is uninitialized.
NOTE: Variable _VDFE_ is uninitialized.
NOTE: Variable _TDFE_ is uninitialized.
NOTE: Variable _TASE_ is uninitialized.
NOTE: Variable _TRASE_ is uninitialized.
NOTE: Variable _TDIV_ is uninitialized.
NOTE: Variable _TSSE_ is uninitialized.
NOTE: Variable _TMSE_ is uninitialized.
NOTE: Variable _TRMSE_ is uninitialized.
NOTE: Variable _TAVERR_ is uninitialized.
NOTE: Variable _TERR_ is uninitialized.
NOTE: Variable _TMAX_ is uninitialized.
NOTE: Variable _VFPE_ is uninitialized.
NOTE: Variable _TFPE_ is uninitialized.
NOTE: Variable _VRFPE_ is uninitialized.
NOTE: Variable _TRFPE_ is uninitialized.
NOTE: Variable _VAIC_ is uninitialized.
NOTE: Variable _TAIC_ is uninitialized.
NOTE: Variable _VSBC_ is uninitialized.
NOTE: Variable _TSBC_ is uninitialized.
NOTE: Variable _TMISC_ is uninitialized.
NOTE: Variable _TWRONG_ is uninitialized.
NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: The data set EMWS1.MDLCOMP_EMREPORTFIT has 132 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):  ;

69559      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
69560      modify MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   modify MdlComp_EMRANK;
69561      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TARGET =
69562         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" DATAROLE = "Data Role" TARGET = "Target Variable" TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   run;
69563      run;

NOTE: MODIFY was successful for EMWS1.MDLCOMP_EMRANK.DATA.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

69564      proc sort data=EMWS1.MdlComp_EMRANK NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_EMRANK NOTHREADS;
69565      by descending model target;
MPRINT(EM_DIAGRAM):   by descending model target;
69566      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 240 observations read from the data set EMWS1.MDLCOMP_EMRANK.
NOTE: The data set EMWS1.MDLCOMP_EMRANK has 240 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69567      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
69568      modify MdlComp_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify MdlComp_EMSCOREDIST;
69569      label PARENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_parent_vlabel  ,  NOQUOTE))" MODEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelnode_vlabel, NOQUOTE))" DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TARGET =
69570         "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel, NOQUOTE))" TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PARENT = "Predecessor Node" MODEL = "Model Node" DATAROLE = "Data Role" TARGET = "Target Variable" TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   run;
69571      run;

NOTE: MODIFY was successful for EMWS1.MDLCOMP_EMSCOREDIST.DATA.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      

69572      proc sort data=EMWS1.MdlComp_EMSCOREDIST NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp_EMSCOREDIST NOTHREADS;
69573      by descending model target;
MPRINT(EM_DIAGRAM):   by descending model target;
69574      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 220 observations read from the data set EMWS1.MDLCOMP_EMSCOREDIST.
NOTE: The data set EMWS1.MDLCOMP_EMSCOREDIST has 220 observations and 18 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
