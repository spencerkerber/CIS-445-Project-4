MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 12, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:31:31" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 12, 2015
Time:                13:31:31
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3FA97QX "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3FA97QX new;
MPRINT(EM_DIAGRAM):   run;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
23072      data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
23073      set EMWS1.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_OUTKEY;
23074      if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
23075      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 19 observations read from the data set EMWS1.NEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

23076      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23077      *------------------------------------------------------------*;
23078      * Neural: Scoring DATA data;
23079      *------------------------------------------------------------*;
23080      data EMWS1.Neural_TRAIN
23081      / view=EMWS1.Neural_TRAIN
23082      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_TRAIN / view=EMWS1.Neural_TRAIN ;
23083      set EMWS1.BINNING_TRAIN
23084      ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TRAIN ;
23085      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas.
23086     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
23087     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
23088     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
23089     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
23090     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
23091     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
23092     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
23093     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
23094     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
23095     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
23096     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
23097     +LENGTH _WARN_ $4
23098     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
23099     +      label GRP_Age2 = 'Dummy: GRP_Age=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Age2 = 'Dummy: GRP_Age=2' ;
23100     +
23101     +      label GRP_Age3 = 'Dummy: GRP_Age=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Age3 = 'Dummy: GRP_Age=3' ;
23102     +
23103     +      label GRP_Age4 = 'Dummy: GRP_Age=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Age4 = 'Dummy: GRP_Age=4' ;
23104     +
23105     +      label GRP_BasementType2 = 'Dummy: GRP_BasementType=2' ;
MPRINT(EM_DIAGRAM):   label GRP_BasementType2 = 'Dummy: GRP_BasementType=2' ;
23106     +
23107     +      label GRP_BasementType3 = 'Dummy: GRP_BasementType=3' ;
MPRINT(EM_DIAGRAM):   label GRP_BasementType3 = 'Dummy: GRP_BasementType=3' ;
23108     +
23109     +      label GRP_Baths3 = 'Dummy: GRP_Baths=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Baths3 = 'Dummy: GRP_Baths=3' ;
23110     +
23111     +      label GRP_CentralAir2 = 'Dummy: GRP_CentralAir=2' ;
MPRINT(EM_DIAGRAM):   label GRP_CentralAir2 = 'Dummy: GRP_CentralAir=2' ;
23112     +
23113     +      label GRP_FirePlace2 = 'Dummy: GRP_FirePlace=2' ;
MPRINT(EM_DIAGRAM):   label GRP_FirePlace2 = 'Dummy: GRP_FirePlace=2' ;
23114     +
23115     +      label GRP_GarageSize2 = 'Dummy: GRP_GarageSize=2' ;
MPRINT(EM_DIAGRAM):   label GRP_GarageSize2 = 'Dummy: GRP_GarageSize=2' ;
23116     +
23117     +      label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
23118     +
23119     +      label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
23120     +
23121     +      label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
23122     +
23123     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
23124     +
23125     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
23126     +
23127     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
23128     +
23129     +      label P_SalePrice = 'Predicted: SalePrice' ;
MPRINT(EM_DIAGRAM):   label P_SalePrice = 'Predicted: SalePrice' ;
23130     +
23131     +      label R_SalePrice = 'Residual: SalePrice' ;
MPRINT(EM_DIAGRAM):   label R_SalePrice = 'Residual: SalePrice' ;
23132     +
23133     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
23134     +
23135     +*** Generate dummy variables for GRP_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Age ;
23136     +drop GRP_Age2 GRP_Age3 GRP_Age4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Age2 GRP_Age3 GRP_Age4 ;
23137     +if missing( GRP_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Age ) then do;
23138     +   GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
23139     +   GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
23140     +   GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
23141     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23142     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23143     +end;
MPRINT(EM_DIAGRAM):   end;
23144     +else do;
MPRINT(EM_DIAGRAM):   else do;
23145     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23146     +   _dm12 = put( GRP_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Age , BEST12. );
23147     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   end;
23148     +   if _dm12 = '5'  then do;
23149     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23150     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
23151     +      GRP_Age4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
23152     +   end;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
23153     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   end;
23154     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
23155     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
23156     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
23157     +   end;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
23158     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   end;
23159     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23160     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = -0.63245553203367;
23161     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
23162     +   end;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
23163     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   end;
23164     +      GRP_Age2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   else do;
23165     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
23166     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
23167     +   end;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
23168     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23169     +      GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   end;
23170     +      GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   end;
23171     +      GRP_Age4 = .;
23172     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_BasementType ;
23173     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop GRP_BasementType2 GRP_BasementType3 ;
23174     +   end;
MPRINT(EM_DIAGRAM):   if missing( GRP_BasementType ) then do;
23175     +end;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = .;
23176     +
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = .;
23177     +*** Generate dummy variables for GRP_BasementType ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23178     +drop GRP_BasementType2 GRP_BasementType3 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23179     +if missing( GRP_BasementType ) then do;
MPRINT(EM_DIAGRAM):   end;
23180     +   GRP_BasementType2 = .;
23181     +   GRP_BasementType3 = .;
MPRINT(EM_DIAGRAM):   else do;
23182     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
23183     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23184     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_BasementType , BEST12. );
23185     +else do;
23186     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
23187     +   _dm12 = put( GRP_BasementType , BEST12. );
23188     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = -0.75;
MPRINT(EM_DIAGRAM):   end;
23189     +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
23190     +      GRP_BasementType2 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = 0.75;
23191     +      GRP_BasementType3 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = -0.75;
23192     +   end;
MPRINT(EM_DIAGRAM):   end;
23193     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23194     +      GRP_BasementType2 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = 0.75;
23195     +      GRP_BasementType3 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = 0.75;
23196     +   end;
MPRINT(EM_DIAGRAM):   end;
23197     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else do;
23198     +      GRP_BasementType2 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = .;
23199     +      GRP_BasementType3 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = .;
23200     +   end;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23201     +   else do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
23202     +      GRP_BasementType2 = .;
MPRINT(EM_DIAGRAM):   end;
23203     +      GRP_BasementType3 = .;
23204     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Baths ;
23205     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop GRP_Baths3 ;
23206     +   end;
MPRINT(EM_DIAGRAM):   if missing( GRP_Baths ) then do;
23207     +end;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = .;
23208     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23209     +*** Generate dummy variables for GRP_Baths ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23210     +drop GRP_Baths3 ;
MPRINT(EM_DIAGRAM):   end;
23211     +if missing( GRP_Baths ) then do;
23212     +   GRP_Baths3 = .;
MPRINT(EM_DIAGRAM):   else do;
23213     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
23214     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23215     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Baths , BEST12. );
23216     +else do;
23217     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
23218     +   _dm12 = put( GRP_Baths , BEST12. );
23219     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23220     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = 1;
23221     +      GRP_Baths3 = -1;
MPRINT(EM_DIAGRAM):   end;
23222     +   end;
23223     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = .;
23224     +      GRP_Baths3 = 1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23225     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23226     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
23227     +      GRP_Baths3 = .;
23228     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_CentralAir ;
23229     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop GRP_CentralAir2 ;
23230     +   end;
MPRINT(EM_DIAGRAM):   if missing( GRP_CentralAir ) then do;
23231     +end;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = .;
23232     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23233     +*** Generate dummy variables for GRP_CentralAir ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23234     +drop GRP_CentralAir2 ;
MPRINT(EM_DIAGRAM):   end;
23235     +if missing( GRP_CentralAir ) then do;
23236     +   GRP_CentralAir2 = .;
MPRINT(EM_DIAGRAM):   else do;
23237     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
23238     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23239     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_CentralAir , BEST12. );
23240     +else do;
23241     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
23242     +   _dm12 = put( GRP_CentralAir , BEST12. );
23243     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
23244     +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = 1;
23245     +      GRP_CentralAir2 = -1;
MPRINT(EM_DIAGRAM):   end;
23246     +   end;
23247     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = .;
23248     +      GRP_CentralAir2 = 1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23249     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23250     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
23251     +      GRP_CentralAir2 = .;
23252     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_FirePlace ;
23253     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop GRP_FirePlace2 ;
23254     +   end;
MPRINT(EM_DIAGRAM):   if missing( GRP_FirePlace ) then do;
23255     +end;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = .;
23256     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23257     +*** Generate dummy variables for GRP_FirePlace ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23258     +drop GRP_FirePlace2 ;
MPRINT(EM_DIAGRAM):   end;
23259     +if missing( GRP_FirePlace ) then do;
23260     +   GRP_FirePlace2 = .;
MPRINT(EM_DIAGRAM):   else do;
23261     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
23262     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23263     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_FirePlace , BEST12. );
23264     +else do;
23265     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
23266     +   _dm12 = put( GRP_FirePlace , BEST12. );
23267     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23268     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = -1;
23269     +      GRP_FirePlace2 = 1;
MPRINT(EM_DIAGRAM):   end;
23270     +   end;
23271     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = .;
23272     +      GRP_FirePlace2 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23273     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23274     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
23275     +      GRP_FirePlace2 = .;
23276     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_GarageSize ;
23277     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop GRP_GarageSize2 ;
23278     +   end;
MPRINT(EM_DIAGRAM):   if missing( GRP_GarageSize ) then do;
23279     +end;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = .;
23280     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23281     +*** Generate dummy variables for GRP_GarageSize ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23282     +drop GRP_GarageSize2 ;
MPRINT(EM_DIAGRAM):   end;
23283     +if missing( GRP_GarageSize ) then do;
23284     +   GRP_GarageSize2 = .;
MPRINT(EM_DIAGRAM):   else do;
23285     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
23286     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23287     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_GarageSize , BEST12. );
23288     +else do;
23289     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
23290     +   _dm12 = put( GRP_GarageSize , BEST12. );
23291     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23292     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = -1;
23293     +      GRP_GarageSize2 = 1;
MPRINT(EM_DIAGRAM):   end;
23294     +   end;
23295     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = .;
23296     +      GRP_GarageSize2 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23297     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23298     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
23299     +      GRP_GarageSize2 = .;
23300     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_TotalArea ;
23301     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
23302     +   end;
MPRINT(EM_DIAGRAM):   if missing( GRP_TotalArea ) then do;
23303     +end;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
23304     +
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
23305     +*** Generate dummy variables for GRP_TotalArea ;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
23306     +drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23307     +if missing( GRP_TotalArea ) then do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23308     +   GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   end;
23309     +   GRP_TotalArea3 = .;
23310     +   GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   else do;
23311     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
23312     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23313     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_TotalArea , BEST12. );
23314     +else do;
23315     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
23316     +   _dm12 = put( GRP_TotalArea , BEST12. );
23317     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   end;
23318     +   if _dm12 = '5'  then do;
23319     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23320     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
23321     +      GRP_TotalArea4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
23322     +   end;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
23323     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   end;
23324     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
23325     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
23326     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
23327     +   end;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
23328     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   end;
23329     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23330     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = -0.63245553203367;
23331     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
23332     +   end;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
23333     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   end;
23334     +      GRP_TotalArea2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   else do;
23335     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
23336     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
23337     +   end;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
23338     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23339     +      GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   end;
23340     +      GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   end;
23341     +      GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   *** *************************;
23342     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
23343     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   *** *************************;
23344     +   end;
MPRINT(EM_DIAGRAM):   *** *************************;
23345     +end;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
23346     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23347     +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23348     +*** *************************;
23349     +*** *************************;
23350     +*** Writing the Node H1 ;
23351     +*** *************************;
23352     +IF _DM_BAD EQ 0 THEN DO;
23353     +   H11  =     1.46896891824831 * GRP_Age2  +      1.4120184149645 * GRP_Age3
23354     +          +     0.78709480654268 * GRP_Age4  +     1.62592446323429 *
23355     +        GRP_BasementType2  +     1.25683006752767 * GRP_BasementType3
MPRINT(EM_DIAGRAM):   H11 = 1.46896891824831 * GRP_Age2 + 1.4120184149645 * GRP_Age3 + 0.78709480654268 * GRP_Age4 + 1.62592446323429 * GRP_BasementType2 + 1.25683006752767 * GRP_BasementType3 + 1.0000000827403E-10 * GRP_Baths3 + 2.79654741294973 * 
GRP_CentralAir2 + 0.58351634441628 * GRP_FirePlace2 + 0.40144882842762 * GRP_GarageSize2 + 1.0000000133514E-10 * GRP_TotalArea2 + 1.0000000827403E-10 * GRP_TotalArea3 + 9.9999994396249E-11 * GRP_TotalArea4 ;
23356     +          +  1.0000000827403E-10 * GRP_Baths3  +     2.79654741294973 *
23357     +        GRP_CentralAir2  +     0.58351634441628 * GRP_FirePlace2
23358     +          +     0.40144882842762 * GRP_GarageSize2  +  1.0000000133514E-10 *
23359     +        GRP_TotalArea2  +  1.0000000827403E-10 * GRP_TotalArea3
23360     +          +  9.9999994396249E-11 * GRP_TotalArea4 ;
23361     +   H12  =  1.0000000827403E-10 * GRP_Age2  +  1.0000000827403E-10 * GRP_Age3
23362     +          +  1.0000000827403E-10 * GRP_Age4  +  1.0000000827403E-10 *
23363     +        GRP_BasementType2  +     0.18293288183824 * GRP_BasementType3
MPRINT(EM_DIAGRAM):   H12 = 1.0000000827403E-10 * GRP_Age2 + 1.0000000827403E-10 * GRP_Age3 + 1.0000000827403E-10 * GRP_Age4 + 1.0000000827403E-10 * GRP_BasementType2 + 0.18293288183824 * GRP_BasementType3 + 0.50585264116567 * GRP_Baths3 + 
1.0000000133514E-10 * GRP_CentralAir2 + 0.53654340101728 * GRP_FirePlace2 + 2.65057139322475 * GRP_GarageSize2 + 0.34864793246853 * GRP_TotalArea2 + 0.9905211965455 * GRP_TotalArea3 + 1.9302717232928 * GRP_TotalArea4 ;
23364     +          +     0.50585264116567 * GRP_Baths3  +  1.0000000133514E-10 *
23365     +        GRP_CentralAir2  +     0.53654340101728 * GRP_FirePlace2
23366     +          +     2.65057139322475 * GRP_GarageSize2  +     0.34864793246853 *
23367     +        GRP_TotalArea2  +      0.9905211965455 * GRP_TotalArea3
23368     +          +      1.9302717232928 * GRP_TotalArea4 ;
23369     +   H13  =  9.9999999600419E-11 * GRP_Age2  +  1.0000000827403E-10 * GRP_Age3
23370     +          +  1.0000000827403E-10 * GRP_Age4  +  9.9999994396249E-11 *
23371     +        GRP_BasementType2  +  1.0000000133514E-10 * GRP_BasementType3
MPRINT(EM_DIAGRAM):   H13 = 9.9999999600419E-11 * GRP_Age2 + 1.0000000827403E-10 * GRP_Age3 + 1.0000000827403E-10 * GRP_Age4 + 9.9999994396249E-11 * GRP_BasementType2 + 1.0000000133514E-10 * GRP_BasementType3 + 0.12104772247969 * GRP_Baths3 + 
0.55774907919595 * GRP_CentralAir2 + 0.54589079462563 * GRP_FirePlace2 + 1.05224248057152 * GRP_GarageSize2 + 0.1139447024623 * GRP_TotalArea2 + 0.07091229722309 * GRP_TotalArea3 + 1.75701034828765 * GRP_TotalArea4 ;
23372     +          +     0.12104772247969 * GRP_Baths3  +     0.55774907919595 *
MPRINT(EM_DIAGRAM):   H11 = 2.31994814941257 + H11 ;
23373     +        GRP_CentralAir2  +     0.54589079462563 * GRP_FirePlace2
MPRINT(EM_DIAGRAM):   H12 = -1.17926560641982 + H12 ;
23374     +          +     1.05224248057152 * GRP_GarageSize2  +      0.1139447024623 *
MPRINT(EM_DIAGRAM):   H13 = -0.88752932173467 + H13 ;
23375     +        GRP_TotalArea2  +     0.07091229722309 * GRP_TotalArea3
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
23376     +          +     1.75701034828765 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
23377     +   H11  =     2.31994814941257 + H11 ;
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
23378     +   H12  =    -1.17926560641982 + H12 ;
MPRINT(EM_DIAGRAM):   END;
23379     +   H13  =    -0.88752932173467 + H13 ;
23380     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   ELSE DO;
23381     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H11 = .;
23382     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H12 = .;
23383     +END;
MPRINT(EM_DIAGRAM):   H13 = .;
23384     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
23385     +   H11  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
23386     +   H12  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
23387     +   H13  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23388     +END;
23389     +*** *************************;
MPRINT(EM_DIAGRAM):   P_SalePrice = -2461.50422899813 * H11 + 2244.19600867762 * H12 + 5022.16016225532 * H13 ;
23390     +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 75326.0209544962 + P_SalePrice ;
23391     +*** *************************;
MPRINT(EM_DIAGRAM):   END;
23392     +IF _DM_BAD EQ 0 THEN DO;
23393     +   P_SalePrice  =    -2461.50422899813 * H11  +     2244.19600867762 * H12
MPRINT(EM_DIAGRAM):   ELSE DO;
23394     +          +     5022.16016225532 * H13 ;
MPRINT(EM_DIAGRAM):   P_SalePrice = .;
23395     +   P_SalePrice  =     75326.0209544962 + P_SalePrice ;
MPRINT(EM_DIAGRAM):   END;
23396     +END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
23397     +ELSE DO;
MPRINT(EM_DIAGRAM):   P_SalePrice = 75017.5647668393;
MPRINT(EM_DIAGRAM):   END;
23398     +   P_SalePrice  = .;
MPRINT(EM_DIAGRAM):   *** *****************************;
23399     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
23400     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** ******************************;
23401     +   P_SalePrice  =     75017.5647668393;
MPRINT(EM_DIAGRAM):   IF MISSING( SalePrice ) THEN R_SalePrice = . ;
23402     +END;
23403     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_SalePrice = SalePrice - P_SalePrice ;
23404     +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   ********************************;
23405     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
23406     +IF MISSING( SalePrice ) THEN R_SalePrice  = . ;
MPRINT(EM_DIAGRAM):   ********************************;
23407     +ELSE R_SalePrice  = SalePrice  - P_SalePrice ;
23408     +********************************;
23409     +*** End Scoring Code for Neural;
23410     +********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
23411     +drop
23412     +H11
23413     +H12
23414     +H13
23415     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
23416      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.26 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.29 seconds
      

MPRINT(EM_DIAGRAM):   quit;
23417      quit;
23418      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
23419      filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23420      *------------------------------------------------------------*;
23421      * Neural: Scoring VALIDATE data;
23422      *------------------------------------------------------------*;
23423      data EMWS1.Neural_VALIDATE
23424      / view=EMWS1.Neural_VALIDATE
23425      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_VALIDATE / view=EMWS1.Neural_VALIDATE ;
23426      set EMWS1.BINNING_VALIDATE
23427      ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_VALIDATE ;
23428      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas.
23429     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
23430     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
23431     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
23432     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
23433     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
23434     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
23435     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
23436     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
23437     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
23438     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
23439     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
23440     +LENGTH _WARN_ $4
23441     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
23442     +      label GRP_Age2 = 'Dummy: GRP_Age=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Age2 = 'Dummy: GRP_Age=2' ;
23443     +
23444     +      label GRP_Age3 = 'Dummy: GRP_Age=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Age3 = 'Dummy: GRP_Age=3' ;
23445     +
23446     +      label GRP_Age4 = 'Dummy: GRP_Age=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Age4 = 'Dummy: GRP_Age=4' ;
23447     +
23448     +      label GRP_BasementType2 = 'Dummy: GRP_BasementType=2' ;
MPRINT(EM_DIAGRAM):   label GRP_BasementType2 = 'Dummy: GRP_BasementType=2' ;
23449     +
23450     +      label GRP_BasementType3 = 'Dummy: GRP_BasementType=3' ;
MPRINT(EM_DIAGRAM):   label GRP_BasementType3 = 'Dummy: GRP_BasementType=3' ;
23451     +
23452     +      label GRP_Baths3 = 'Dummy: GRP_Baths=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Baths3 = 'Dummy: GRP_Baths=3' ;
23453     +
23454     +      label GRP_CentralAir2 = 'Dummy: GRP_CentralAir=2' ;
MPRINT(EM_DIAGRAM):   label GRP_CentralAir2 = 'Dummy: GRP_CentralAir=2' ;
23455     +
23456     +      label GRP_FirePlace2 = 'Dummy: GRP_FirePlace=2' ;
MPRINT(EM_DIAGRAM):   label GRP_FirePlace2 = 'Dummy: GRP_FirePlace=2' ;
23457     +
23458     +      label GRP_GarageSize2 = 'Dummy: GRP_GarageSize=2' ;
MPRINT(EM_DIAGRAM):   label GRP_GarageSize2 = 'Dummy: GRP_GarageSize=2' ;
23459     +
23460     +      label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
23461     +
23462     +      label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
23463     +
23464     +      label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
23465     +
23466     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
23467     +
23468     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
23469     +
23470     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
23471     +
23472     +      label P_SalePrice = 'Predicted: SalePrice' ;
MPRINT(EM_DIAGRAM):   label P_SalePrice = 'Predicted: SalePrice' ;
23473     +
23474     +      label R_SalePrice = 'Residual: SalePrice' ;
MPRINT(EM_DIAGRAM):   label R_SalePrice = 'Residual: SalePrice' ;
23475     +
23476     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
23477     +
23478     +*** Generate dummy variables for GRP_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Age ;
23479     +drop GRP_Age2 GRP_Age3 GRP_Age4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Age2 GRP_Age3 GRP_Age4 ;
23480     +if missing( GRP_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Age ) then do;
23481     +   GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
23482     +   GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
23483     +   GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
23484     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23485     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23486     +end;
MPRINT(EM_DIAGRAM):   end;
23487     +else do;
MPRINT(EM_DIAGRAM):   else do;
23488     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23489     +   _dm12 = put( GRP_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Age , BEST12. );
23490     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23491     +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
23492     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
23493     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
23494     +      GRP_Age4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = 0.63245553203367;
23495     +   end;
MPRINT(EM_DIAGRAM):   end;
23496     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23497     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
23498     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
23499     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
23500     +   end;
MPRINT(EM_DIAGRAM):   end;
23501     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
23502     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
23503     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
23504     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
23505     +   end;
MPRINT(EM_DIAGRAM):   end;
23506     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23507     +      GRP_Age2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = -0.63245553203367;
23508     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
23509     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
23510     +   end;
MPRINT(EM_DIAGRAM):   end;
23511     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23512     +      GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
23513     +      GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
23514     +      GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
23515     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23516     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23517     +   end;
MPRINT(EM_DIAGRAM):   end;
23518     +end;
MPRINT(EM_DIAGRAM):   end;
23519     +
23520     +*** Generate dummy variables for GRP_BasementType ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_BasementType ;
23521     +drop GRP_BasementType2 GRP_BasementType3 ;
MPRINT(EM_DIAGRAM):   drop GRP_BasementType2 GRP_BasementType3 ;
23522     +if missing( GRP_BasementType ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_BasementType ) then do;
23523     +   GRP_BasementType2 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = .;
23524     +   GRP_BasementType3 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = .;
23525     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23526     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23527     +end;
MPRINT(EM_DIAGRAM):   end;
23528     +else do;
MPRINT(EM_DIAGRAM):   else do;
23529     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23530     +   _dm12 = put( GRP_BasementType , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_BasementType , BEST12. );
23531     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23532     +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
23533     +      GRP_BasementType2 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = -0.75;
23534     +      GRP_BasementType3 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = -0.75;
23535     +   end;
MPRINT(EM_DIAGRAM):   end;
23536     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
23537     +      GRP_BasementType2 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = 0.75;
23538     +      GRP_BasementType3 = -0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = -0.75;
23539     +   end;
MPRINT(EM_DIAGRAM):   end;
23540     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23541     +      GRP_BasementType2 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = 0.75;
23542     +      GRP_BasementType3 = 0.75;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = 0.75;
23543     +   end;
MPRINT(EM_DIAGRAM):   end;
23544     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23545     +      GRP_BasementType2 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType2 = .;
23546     +      GRP_BasementType3 = .;
MPRINT(EM_DIAGRAM):   GRP_BasementType3 = .;
23547     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23548     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23549     +   end;
MPRINT(EM_DIAGRAM):   end;
23550     +end;
MPRINT(EM_DIAGRAM):   end;
23551     +
23552     +*** Generate dummy variables for GRP_Baths ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Baths ;
23553     +drop GRP_Baths3 ;
MPRINT(EM_DIAGRAM):   drop GRP_Baths3 ;
23554     +if missing( GRP_Baths ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Baths ) then do;
23555     +   GRP_Baths3 = .;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = .;
23556     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23557     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23558     +end;
MPRINT(EM_DIAGRAM):   end;
23559     +else do;
MPRINT(EM_DIAGRAM):   else do;
23560     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23561     +   _dm12 = put( GRP_Baths , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Baths , BEST12. );
23562     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23563     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
23564     +      GRP_Baths3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = -1;
23565     +   end;
MPRINT(EM_DIAGRAM):   end;
23566     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23567     +      GRP_Baths3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = 1;
23568     +   end;
MPRINT(EM_DIAGRAM):   end;
23569     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23570     +      GRP_Baths3 = .;
MPRINT(EM_DIAGRAM):   GRP_Baths3 = .;
23571     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23572     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23573     +   end;
MPRINT(EM_DIAGRAM):   end;
23574     +end;
MPRINT(EM_DIAGRAM):   end;
23575     +
23576     +*** Generate dummy variables for GRP_CentralAir ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_CentralAir ;
23577     +drop GRP_CentralAir2 ;
MPRINT(EM_DIAGRAM):   drop GRP_CentralAir2 ;
23578     +if missing( GRP_CentralAir ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_CentralAir ) then do;
23579     +   GRP_CentralAir2 = .;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = .;
23580     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23581     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23582     +end;
MPRINT(EM_DIAGRAM):   end;
23583     +else do;
MPRINT(EM_DIAGRAM):   else do;
23584     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23585     +   _dm12 = put( GRP_CentralAir , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_CentralAir , BEST12. );
23586     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23587     +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
23588     +      GRP_CentralAir2 = -1;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = -1;
23589     +   end;
MPRINT(EM_DIAGRAM):   end;
23590     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
23591     +      GRP_CentralAir2 = 1;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = 1;
23592     +   end;
MPRINT(EM_DIAGRAM):   end;
23593     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23594     +      GRP_CentralAir2 = .;
MPRINT(EM_DIAGRAM):   GRP_CentralAir2 = .;
23595     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23596     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23597     +   end;
MPRINT(EM_DIAGRAM):   end;
23598     +end;
MPRINT(EM_DIAGRAM):   end;
23599     +
23600     +*** Generate dummy variables for GRP_FirePlace ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_FirePlace ;
23601     +drop GRP_FirePlace2 ;
MPRINT(EM_DIAGRAM):   drop GRP_FirePlace2 ;
23602     +if missing( GRP_FirePlace ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_FirePlace ) then do;
23603     +   GRP_FirePlace2 = .;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = .;
23604     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23605     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23606     +end;
MPRINT(EM_DIAGRAM):   end;
23607     +else do;
MPRINT(EM_DIAGRAM):   else do;
23608     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23609     +   _dm12 = put( GRP_FirePlace , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_FirePlace , BEST12. );
23610     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23611     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
23612     +      GRP_FirePlace2 = 1;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = 1;
23613     +   end;
MPRINT(EM_DIAGRAM):   end;
23614     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23615     +      GRP_FirePlace2 = -1;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = -1;
23616     +   end;
MPRINT(EM_DIAGRAM):   end;
23617     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23618     +      GRP_FirePlace2 = .;
MPRINT(EM_DIAGRAM):   GRP_FirePlace2 = .;
23619     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23620     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23621     +   end;
MPRINT(EM_DIAGRAM):   end;
23622     +end;
MPRINT(EM_DIAGRAM):   end;
23623     +
23624     +*** Generate dummy variables for GRP_GarageSize ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_GarageSize ;
23625     +drop GRP_GarageSize2 ;
MPRINT(EM_DIAGRAM):   drop GRP_GarageSize2 ;
23626     +if missing( GRP_GarageSize ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_GarageSize ) then do;
23627     +   GRP_GarageSize2 = .;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = .;
23628     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23629     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23630     +end;
MPRINT(EM_DIAGRAM):   end;
23631     +else do;
MPRINT(EM_DIAGRAM):   else do;
23632     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23633     +   _dm12 = put( GRP_GarageSize , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_GarageSize , BEST12. );
23634     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23635     +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
23636     +      GRP_GarageSize2 = 1;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = 1;
23637     +   end;
MPRINT(EM_DIAGRAM):   end;
23638     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23639     +      GRP_GarageSize2 = -1;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = -1;
23640     +   end;
MPRINT(EM_DIAGRAM):   end;
23641     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23642     +      GRP_GarageSize2 = .;
MPRINT(EM_DIAGRAM):   GRP_GarageSize2 = .;
23643     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23644     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23645     +   end;
MPRINT(EM_DIAGRAM):   end;
23646     +end;
MPRINT(EM_DIAGRAM):   end;
23647     +
23648     +*** Generate dummy variables for GRP_TotalArea ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_TotalArea ;
23649     +drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
23650     +if missing( GRP_TotalArea ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_TotalArea ) then do;
23651     +   GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
23652     +   GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
23653     +   GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
23654     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23655     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23656     +end;
MPRINT(EM_DIAGRAM):   end;
23657     +else do;
MPRINT(EM_DIAGRAM):   else do;
23658     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
23659     +   _dm12 = put( GRP_TotalArea , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_TotalArea , BEST12. );
23660     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23661     +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
23662     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
23663     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
23664     +      GRP_TotalArea4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = 0.63245553203367;
23665     +   end;
MPRINT(EM_DIAGRAM):   end;
23666     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
23667     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
23668     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
23669     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
23670     +   end;
MPRINT(EM_DIAGRAM):   end;
23671     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
23672     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
23673     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
23674     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
23675     +   end;
MPRINT(EM_DIAGRAM):   end;
23676     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
23677     +      GRP_TotalArea2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = -0.63245553203367;
23678     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
23679     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
23680     +   end;
MPRINT(EM_DIAGRAM):   end;
23681     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23682     +      GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
23683     +      GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
23684     +      GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
23685     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23686     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23687     +   end;
MPRINT(EM_DIAGRAM):   end;
23688     +end;
MPRINT(EM_DIAGRAM):   end;
23689     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23690     +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
23691     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23692     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23693     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
23694     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23695     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23696     +   H11  =     1.46896891824831 * GRP_Age2  +      1.4120184149645 * GRP_Age3
23697     +          +     0.78709480654268 * GRP_Age4  +     1.62592446323429 *
23698     +        GRP_BasementType2  +     1.25683006752767 * GRP_BasementType3
23699     +          +  1.0000000827403E-10 * GRP_Baths3  +     2.79654741294973 *
23700     +        GRP_CentralAir2  +     0.58351634441628 * GRP_FirePlace2
23701     +          +     0.40144882842762 * GRP_GarageSize2  +  1.0000000133514E-10 *
23702     +        GRP_TotalArea2  +  1.0000000827403E-10 * GRP_TotalArea3
23703     +          +  9.9999994396249E-11 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H11 = 1.46896891824831 * GRP_Age2 + 1.4120184149645 * GRP_Age3 + 0.78709480654268 * GRP_Age4 + 1.62592446323429 * GRP_BasementType2 + 1.25683006752767 * GRP_BasementType3 + 1.0000000827403E-10 * GRP_Baths3 + 2.79654741294973 * 
GRP_CentralAir2 + 0.58351634441628 * GRP_FirePlace2 + 0.40144882842762 * GRP_GarageSize2 + 1.0000000133514E-10 * GRP_TotalArea2 + 1.0000000827403E-10 * GRP_TotalArea3 + 9.9999994396249E-11 * GRP_TotalArea4 ;
23704     +   H12  =  1.0000000827403E-10 * GRP_Age2  +  1.0000000827403E-10 * GRP_Age3
23705     +          +  1.0000000827403E-10 * GRP_Age4  +  1.0000000827403E-10 *
23706     +        GRP_BasementType2  +     0.18293288183824 * GRP_BasementType3
23707     +          +     0.50585264116567 * GRP_Baths3  +  1.0000000133514E-10 *
23708     +        GRP_CentralAir2  +     0.53654340101728 * GRP_FirePlace2
23709     +          +     2.65057139322475 * GRP_GarageSize2  +     0.34864793246853 *
23710     +        GRP_TotalArea2  +      0.9905211965455 * GRP_TotalArea3
23711     +          +      1.9302717232928 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H12 = 1.0000000827403E-10 * GRP_Age2 + 1.0000000827403E-10 * GRP_Age3 + 1.0000000827403E-10 * GRP_Age4 + 1.0000000827403E-10 * GRP_BasementType2 + 0.18293288183824 * GRP_BasementType3 + 0.50585264116567 * GRP_Baths3 + 
1.0000000133514E-10 * GRP_CentralAir2 + 0.53654340101728 * GRP_FirePlace2 + 2.65057139322475 * GRP_GarageSize2 + 0.34864793246853 * GRP_TotalArea2 + 0.9905211965455 * GRP_TotalArea3 + 1.9302717232928 * GRP_TotalArea4 ;
23712     +   H13  =  9.9999999600419E-11 * GRP_Age2  +  1.0000000827403E-10 * GRP_Age3
23713     +          +  1.0000000827403E-10 * GRP_Age4  +  9.9999994396249E-11 *
23714     +        GRP_BasementType2  +  1.0000000133514E-10 * GRP_BasementType3
23715     +          +     0.12104772247969 * GRP_Baths3  +     0.55774907919595 *
23716     +        GRP_CentralAir2  +     0.54589079462563 * GRP_FirePlace2
23717     +          +     1.05224248057152 * GRP_GarageSize2  +      0.1139447024623 *
23718     +        GRP_TotalArea2  +     0.07091229722309 * GRP_TotalArea3
23719     +          +     1.75701034828765 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H13 = 9.9999999600419E-11 * GRP_Age2 + 1.0000000827403E-10 * GRP_Age3 + 1.0000000827403E-10 * GRP_Age4 + 9.9999994396249E-11 * GRP_BasementType2 + 1.0000000133514E-10 * GRP_BasementType3 + 0.12104772247969 * GRP_Baths3 + 
0.55774907919595 * GRP_CentralAir2 + 0.54589079462563 * GRP_FirePlace2 + 1.05224248057152 * GRP_GarageSize2 + 0.1139447024623 * GRP_TotalArea2 + 0.07091229722309 * GRP_TotalArea3 + 1.75701034828765 * GRP_TotalArea4 ;
23720     +   H11  =     2.31994814941257 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 2.31994814941257 + H11 ;
23721     +   H12  =    -1.17926560641982 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.17926560641982 + H12 ;
23722     +   H13  =    -0.88752932173467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.88752932173467 + H13 ;
23723     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
23724     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
23725     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
23726     +END;
MPRINT(EM_DIAGRAM):   END;
23727     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23728     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
23729     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
23730     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
23731     +END;
MPRINT(EM_DIAGRAM):   END;
23732     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23733     +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
23734     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23735     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23736     +   P_SalePrice  =    -2461.50422899813 * H11  +     2244.19600867762 * H12
23737     +          +     5022.16016225532 * H13 ;
MPRINT(EM_DIAGRAM):   P_SalePrice = -2461.50422899813 * H11 + 2244.19600867762 * H12 + 5022.16016225532 * H13 ;
23738     +   P_SalePrice  =     75326.0209544962 + P_SalePrice ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 75326.0209544962 + P_SalePrice ;
23739     +END;
MPRINT(EM_DIAGRAM):   END;
23740     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23741     +   P_SalePrice  = .;
MPRINT(EM_DIAGRAM):   P_SalePrice = .;
23742     +END;
MPRINT(EM_DIAGRAM):   END;
23743     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
23744     +   P_SalePrice  =     75017.5647668393;
MPRINT(EM_DIAGRAM):   P_SalePrice = 75017.5647668393;
23745     +END;
MPRINT(EM_DIAGRAM):   END;
23746     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
23747     +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
23748     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
23749     +IF MISSING( SalePrice ) THEN R_SalePrice  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( SalePrice ) THEN R_SalePrice = . ;
23750     +ELSE R_SalePrice  = SalePrice  - P_SalePrice ;
MPRINT(EM_DIAGRAM):   ELSE R_SalePrice = SalePrice - P_SalePrice ;
23751     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
23752     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
23753     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
23754     +drop
23755     +H11
23756     +H12
23757     +H13
23758     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
23759      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.25 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.26 seconds
      

MPRINT(EM_DIAGRAM):   quit;
23760      quit;
23761      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
23762      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23763      * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
23764      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Neural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural_TRAIN out=WORK.M1DZD_9H noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DZD_9H;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DZD_9H(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DZD_9H;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DZD_9H;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M010TEC7 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M010TEC7;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M010TEC7;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1XGHP0K(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M010TEC7;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M010TEC7;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M010TEC7;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M010TEC7;
MPRINT(EMADVISECOLUMNS):   set WORK.M010TEC7;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_SALEPRICE") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_SALEPRICE") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("SALEPRICE") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
24094      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
24095      set EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO;
24096      where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
24097      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE (DATA='Neural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

24098      data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMINFO;
24099      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
24100      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
24101      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
24105      run;
24106      data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMINFO;
24107      set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
24108      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

24109      proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
24110      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
24111      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.34 seconds
      
NOTE: View EMWS1.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
