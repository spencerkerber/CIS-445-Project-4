MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 10, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:29:16" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 10, 2015
Time:                13:29:16
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O041O07K "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O041O07K new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 10, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:29:16" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080760";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M1P120413";
MPRINT(EM_DIAGRAM):   put "EM Version:          13.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 10, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:29:17" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                sakerb01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\sakerb01\Desktop\SAS EM 12.3 Tutorials _ Projects\Project_4\Workspaces\EMWS1\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
87362      proc freq data=EMWS1.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Trans_VariableSet noprint;
87363      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
87364      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS1.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

87365      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
87366      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
87367      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
87368      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
87369      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
87370      run;

NOTE: There were 4 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 35.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

87371      title10;
MPRINT(EM_DIAGRAM):   title10;
87372      data WORK.M1UCZXDZ;
MPRINT(EM_DIAGRAM):    data WORK.M1UCZXDZ;
87373      set WORK.M1UCZXDZ;
MPRINT(EM_DIAGRAM):   set WORK.M1UCZXDZ;
87374      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
87375      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M1UCZXDZ.
NOTE: The data set WORK.M1UCZXDZ has 11 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS1.Varsel_TRAIN;
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      
NOTE: There were 193 observations read from the data set EMWS1.FILTER_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
87440      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
87441      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
87442      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
87443      data WORK.M1HW68Q6;
MPRINT(EM_DIAGRAM):   data WORK.M1HW68Q6;
87444      set WORK.M1HW68Q6;
MPRINT(EM_DIAGRAM):   set WORK.M1HW68Q6;
87445      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
87446      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M1HW68Q6.
NOTE: The data set WORK.M1HW68Q6 has 11 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

87447      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
87448      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
87449      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
87450      %macro DMDBClass;
87451          BasementType(ASC) CentralAir(ASC)
87452      %mend DMDBClass;
87453      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
87454      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
87455      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
87456      %macro DMDBVar;
87457          Age Basement Baths ConstructionType FirePlace GarageSize SalePrice SecondFloor
87458         TotalArea
87459      %mend DMDBVar;
87460      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
87461      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
87462      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
87463      proc dmdb batch data=EMWS1.Varsel_TRAIN
87464      dmdbcat=WORK.EM_DMDB
87465      classout=WORK.Transclassout
87466      maxlevel = 513
87467      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Varsel_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
87468      class %DMDBClass;
MPRINT(DMDBCLASS):   BasementType(ASC) CentralAir(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
87469      var %DMDBVar;
MPRINT(DMDBVAR):   Age Basement Baths ConstructionType FirePlace GarageSize SalePrice SecondFloor TotalArea
MPRINT(EM_DIAGRAM):  ;
87470      target
87471      SalePrice
87472      ;
MPRINT(EM_DIAGRAM):   target SalePrice ;
87473      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 193   Memory used = 511K.
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: There were 193 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 193 observations read from the data set EMWS1.VARSEL_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 5 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
87474      quit;
87475      *--- end code ---*;

87476      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
87477      set WORK.M1UCZXDZ;
MPRINT(EM_DIAGRAM):   set WORK.M1UCZXDZ;
87478      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
87479      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M1UCZXDZ.
NOTE: The data set WORK.TRANSINTERVALMETA has 9 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

87480      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
87481      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
87482      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
87483      data WORK.M2PTHWS9;
MPRINT(EM_DIAGRAM):   data WORK.M2PTHWS9;
87484      set WORK.M2PTHWS9;
MPRINT(EM_DIAGRAM):   set WORK.M2PTHWS9;
87485      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
87486      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK.M2PTHWS9.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M2PTHWS9 has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------* 
*  Trans: Equalize transformation requires a class target variable.  Transformation will be ignored. 
*------------------------------------------------------------* 
*------------------------------------------------------------* 
*  Trans: Optimize equalize max. transformation requires a class target variable.  Transformation will be ignored. 
*------------------------------------------------------------* 
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.60 seconds
      cpu time            0.62 seconds
      
87489      %exploreSample(DATA=EMWS1.Varsel_TRAIN, OUTPUT=EMWS1.Trans_SAMPLE_DATA, METADATA=EMWS1.Varsel_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):     
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
87490     +/*------------------------------------------------------------------
87491     +  MACRO EXPLOREOBS
87492     +
87493     +  SUPPORT:  SASDHD - David Duling
87494     +  PRODUCT:  Enterprise Miner
87495     +
87496     +  DESCRIPTION:
87497     +  Generates maximum and default numbers of observations to
87498     +  download for visualization depending on the record length.
87499     +
87500     +  Values were determined by trial and error using typical
87501     +  Windows workstation configurations.
87502     +
87503     +  Discrete sets of values are returned so that user experience
87504     +  will be consitent with similar sized data sets.
87505     +
87506     +  These macro variables are set:
87507     +  _exploreobs_max -- maximum number of obs downloadable
87508     +  _exploreobs_def -- default number of obs to be downloaded
87509     +  _exploreobs_recl - record length.  Might be useful for reporting.
87510     +
87511     +  Use the _exploreobs_max to set limit the GUI selection of
87512     +  observations for downloading.  The GUI selection for obs
87513     +  could be reduced to "Default" and "Max".
87514     +
87515     +  Parameters
87516     +  data=   libname.memname of input data
87517     +  vars=   subset list of variables.
87518     +          downloading 1 out of 500 really does work like downloading
87519     +          1 out of 1 vars.  Users may select a subset of vars for
87520     +                   visualizations.  Pass in the list as space delimited
87521     +          var names.  If vars is not specified, the record length
87522     +          of the entire data will be used.
87523     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
87524     +
87525     +  Control
87526     +  Users may control the values by entering these macro variables.
87527     +            EM_EXPLOREOBS_MAX
87528     +            EM_EXPLOREOBS_DEFAULT
87529     +  These values override the computed values.
87530     +
87531     +  Debugging
87532     +  %let _exploreobs_debug=1 ;
87533     +--------------------------------------------------------------------
87534     +  HISTORY: 20APR2004. sasdhd. pushed.
87535     +           18DEC2004. sasdhd. S0280556.
87536     +           07SEP2007. sasdhd. HK1009586
87537     +--------------------------------------------------------------------*/
87538     +
87539     +%macro exploreobs(data=,vars=, nbytes=) ;
87540     +
87541     +   /*--- variable definitions ---*/
87542     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
87543     +   %local xobs xvars xlen vlen xi vname vlist ;
87544     +   %local _exp_source _exp_notes ;
87545     +
87546     +   /*--- USER definitions ---*/
87547     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
87548     +
87549     +   /*--- variable intializations ---*/
87550     +   %let _exploreobs_max=0 ;
87551     +   %let _exploreobs_def=0 ;
87552     +   %let _exploreobs_recl=0 ;
87553     +   %let xvars= 0 ;
87554     +   %let xlen = 0 ;
87555     +   %let xobs = 0 ;
87556     +
87557     +   /*--- data error checks ---*/
87558     +   %if "&data" eq "" %then %do ;
87559     +            %put NOTE: DATA is not specified. ;
87560     +            %goto term ;
87561     +      %end ;
87562     +
87563     +   %let dsid=%sysfunc(open(&data)) ;
87564     +   %if not &dsid %then %do ;
87565     +            %put NOTE: DATA &data is not available. ;
87566     +            %goto term ;
87567     +      %end ;
87568     +
87569     +   /*--- if a vars list exists generate a subset ---*/
87570     +   %if &vars ne %then %do ;
87571     +         %let dsid=%sysfunc(close(&dsid)) ;
87572     +         %if &_exploreobs_debug ne 1 %then %do ;
87573     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
87574     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
87575     +                  options nosource nonotes ;
87576     +         %end ;
87577     +         data _exploreobs_temp_data ;
87578     +         set &data(obs=0) ;
87579     +          keep &vars ;
87580     +         run;
87581     +         %if &_exploreobs_debug ne 1 %then %do ;
87582     +                  options &_exp_source &_exp_notes ;
87583     +         %end ;
87584     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
87585     +         %if &dsid eq 0 %then %do ;
87586     +                  %put NOTE: Sample is not available.;
87587     +                  %goto term ;
87588     +            %end ;
87589     +      %end ;
87590     +
87591     +   /*--- get var attributes ---*/
87592     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
87593     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
87594     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
87595     +   %let dsid= %sysfunc(close(&dsid)) ;
87596     +
87597     +   /*--- set default and max obs ---*/
87598     +   %let _exploreobs_recl=%eval(&xlen) ;
87599     +   %if &_exploreobs_recl eq 0 %then %do ;
87600     +             %let _exploreobs_max= 0 ;
87601     +             %let _exploreobs_def= 0 ;
87602     +             %goto term ;
87603     +
87604     +   %end ;
87605     +   %else
87606     +   %if &_exploreobs_recl le 32 %then %do ;
87607     +             %let _exploreobs_max=100000 ;
87608     +             %let _exploreobs_def= 10000 ;
87609     +   %end ;
87610     +   %else
87611     +   %if &_exploreobs_recl le 128 %then %do ;
87612     +             %let _exploreobs_max=60000 ;
87613     +             %let _exploreobs_def= 6000 ;
87614     +   %end ;
87615     +   %else
87616     +   %if &_exploreobs_recl lt 1000 %then %do ;
87617     +             %let _exploreobs_max=20000 ;
87618     +             %let _exploreobs_def= 2000 ;
87619     +   %end ;
87620     +   %else
87621     +   %if &_exploreobs_recl lt 5000 %then %do ;
87622     +             %let _exploreobs_max= 10000 ;
87623     +             %let _exploreobs_def=  1000 ;
87624     +   %end ;
87625     +   %else
87626     +   %if &_exploreobs_recl lt 20000 %then %do ;
87627     +             %let _exploreobs_max= 5000 ;
87628     +             %let _exploreobs_def=  500 ;
87629     +   %end ;
87630     +   %else %do ;
87631     +             %let _exploreobs_max= 1000 ;
87632     +             %let _exploreobs_def=  200 ;
87633     +   %end ;
87634     +
87635     +   /*--- Users options ---*/
87636     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
87637     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
87638     +   %end;
87639     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
87640     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
87641     +   %end;
87642     +
87643     +    /*--- S0868273 ---*/
87644     +    %if "&NBYTES" ne "" %then %do;
87645     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
87646     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
87647     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
87648     +       %end;
87649     +
87650     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
87651     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
87652     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
87653     +          %if ^&_exploreobs_def %then
87654     +              %let _exploreobs_def = 1;
87655     +
87656     +       %end;
87657     +    %end;
87658     +
87659     +   /*--- Terminate ---*/
87660     +   %term:
87661     +
87662     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
87663     +%mend ;
87664     +
87665     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS1.Varsel_TRAIN : vars= 19 : recl= 148 : max=20000 : def= 2000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS1.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS1.Varsel_TRAIN(obs= 2000 );
MPRINT(EXPLORESAMPLE):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 218 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
      
NOTE: There were 193 observations read from the data set EMWS1.FILTER_TRAIN.
NOTE: There were 193 observations read from the data set EMWS1.VARSEL_TRAIN.
NOTE: The data set EMWS1.TRANS_SAMPLE_DATA has 193 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
